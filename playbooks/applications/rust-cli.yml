---
- name: Install Rust-based CLI Tools
  hosts: all
  become: true
  tasks:
    - name: Install necessary packages
      become: true
      ansible.builtin.apt:
        name:
        - curl
        - git
        - build-essential
        state: present

    - name: Download and execute rustup-init
      become: false
      args:
        executable: /bin/bash
      register: rustup_output
      changed_when: "'Rust is installed now' not in rustup_output.stdout"
          # If rustup is already installed, this task won't change anything
      ansible.builtin.shell: "curl https://sh.rustup.rs -sSf | sh -s -- -y"

    - name: Set environment variables for rustup (important for subsequent tasks)
      become: false
      environment:
        PATH: "{{ lookup('env', 'HOME') }}/.cargo/bin:{{ lookup('env', 'PATH') }}"
      run_once: true
      changed_when: false
      delegate_to: localhost
      
    - name: Define list of tools to install
      ansible.builtin.set_fact:
        tools:
        - name: exa
          repo: ogham/exa
        - name: gitui
          repo: extrawurst/gitui
        - name: gping
          repo: orf/gping
        - name: bottom
          repo: ClementTsang/bottom
        - name: choose
          repo: theryangeary/choose
        - name: fzf
          repo: junegunn/fzf
        - name: sd
          repo: chmln/sd

    - name: Install tools using cargo
      loop: "{{ tools }}"
      become: false
      environment:
        PATH: "{{ lookup('env', 'HOME') }}/.cargo/bin:{{ lookup('env', 'PATH') }}"
      register: cargo_install_output
      ignore_errors: true     # Some tools might have issues, continue anyway
      ansible.builtin.command: cargo install --locked --git https://github.com/{{ item.repo }}.git {{ item.name }}

    - name: Display cargo install output
      when: cargo_install_output is defined
      ansible.builtin.debug:
        msg: "{{ cargo_install_output }}"
