---
- name: Copy the nginx configuration file
  notify:
  - restart nginx
  tags:
  - nginx_conf
  - nginx
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: '{{nginx_conf_dir}}/nginx.conf'

- name: Ensure auth_basic files created
  with_items: "{{ nginx_auth_basic_files.keys() }}"
  tags:
  - nginx_conf
  - nginx
  ansible.builtin.template:
    src: auth_basic.j2
    dest: '{{nginx_conf_dir}}/auth_basic/{{ item }}'
    owner: root
    group: '{{nginx_group}}'
    mode: '0750'

- name: Create the configurations for sites
  with_items: "{{ nginx_sites.keys() | difference(nginx_remove_sites) }}"
  notify:
  - reload nginx
  tags:
  - nginx_vhost
  - nginx
  ansible.builtin.template:
    src: site.conf.j2
    dest: '{{nginx_conf_dir}}/sites-available/{{ item }}.conf'

- name: Create links for sites-enabled
  with_items: "{{ nginx_sites.keys() | difference(nginx_remove_sites) }}"
  notify:
  - reload nginx
  tags:
  - nginx_vhost
  - nginx
  ansible.builtin.file:
    state: link
    src: '{{nginx_conf_dir}}/sites-available/{{ item }}.conf dest={{nginx_conf_dir}}/sites-enabled/{{ item }}.conf'

- name: Create the configurations for independent config file
  with_items: "{{ nginx_configs.keys() }}"
  notify:
  - reload nginx
  tags:
  - nginx_conf
  - nginx
  ansible.builtin.template:
    src: config.conf.j2
    dest: '{{nginx_conf_dir}}/conf.d/{{ item }}.conf'

- name: Create the configurations for independent config file for streams
  with_items: "{{ nginx_stream_configs.keys() }}"
  notify:
  - reload nginx
  tags:
  - nginx_conf
  - nginx
  when: nginx_official_repo_mainline
  ansible.builtin.template:
    src: config_stream.conf.j2
    dest: '{{nginx_conf_dir}}/conf.d/stream/{{ item }}.conf'
