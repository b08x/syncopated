---
  - name: Ensure OpenSSL is installed
    when: ansible_distribution == "RedHat"
    tags:
    - ssl-certs
    - packages
    ansible.builtin.yum:
      name: openssl
      state: present

  - name: Ensure ssl folder exist
    tags:
    - ssl-certs
    - configuration
    ansible.builtin.file:
      path: "{{ ssl_certs_path }}"
      state: directory
      owner: "{{ ssl_certs_path_owner }}"
      group: "{{ ssl_certs_path_group }}"
      mode: "{{ ssl_certs_mode }}"

  - local_action: stat path={{ ssl_certs_local_privkey_path }}
    register: stat_privkey
    become: no
    tags: [ssl-certs,configuration]

  - local_action: stat path={{ ssl_certs_local_cert_path }}
    register: stat_cert
    become: no
    tags: [ssl-certs,configuration]

  - name: Test if privkey file is needed
    when: not stat_privkey.stat.exists and stat_cert.stat.exists
    tags:
    - ssl-certs
    - configuration
    ansible.builtin.fail:
      msg: '"Privkey'

  - name: Test if cert file is needed
    when: stat_privkey.stat.exists and not stat_cert.stat.exists
    tags:
    - ssl-certs
    - configuration
    ansible.builtin.fail:
      msg: '"Cert'

  - when: >
      ( not stat_privkey.stat.exists and not stat_cert.stat.exists ) and ( ssl_certs_local_privkey_data is undefined and ssl_certs_local_cert_data is undefined )
    tags:
    - ssl-certs
    - configuration
    ansible.builtin.include_tasks: generate.yml

  - name: Copy SSL certificates
    when: >
      ( stat_privkey.stat.exists and stat_cert.stat.exists ) and ( ssl_certs_local_privkey_data is undefined and ssl_certs_local_cert_data is undefined )
    with_items:
    - src: '{{ ssl_certs_local_cert_path }}'
      dest: '{{ ssl_certs_cert_path }}'
    - src: '{{ ssl_certs_local_privkey_path }}'
      dest: '{{ ssl_certs_privkey_path }}'
    tags:
    - ssl-certs
    - configuration
    ansible.builtin.copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: "{{ ssl_certs_path_owner }}"
      group: "{{ ssl_certs_path_group }}"
      mode: "{{ ssl_certs_mode }}"

  - name: Copy SSL certificate data
    when: ssl_certs_local_privkey_data is defined and ssl_certs_local_cert_data is defined
    with_items:
    - content: '{{ ssl_certs_local_cert_data|default }}'
      dest: '{{ ssl_certs_cert_path }}'
    - content: '{{ ssl_certs_local_privkey_data|default }}'
      dest: '{{ ssl_certs_privkey_path }}'
    no_log: true
    tags:
    - ssl-certs
    - configuration
    ansible.builtin.copy:
      content: "{{ item.content }}"
      dest: "{{ item.dest }}"
      owner: "{{ ssl_certs_path_owner }}"
      group: "{{ ssl_certs_path_group }}"
      mode: "{{ ssl_certs_mode }}"

  - name: Generate strong DHE parameter - https://weakdh.org/
    when: ssl_certs_generate_dh_param
    tags:
    - ssl-certs
    - configuration
    ansible.builtin.command: openssl dhparam -out {{ssl_certs_dhparam_path}} {{ssl_certs_dhparam_size}} creates={{ssl_certs_dhparam_path}}
