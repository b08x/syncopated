---
#TODO: package this
# - name: Install modified starfield theme
#   unarchive:
#     src: files/usr/share/grub/starfield.tar.gz
#     dest: "/usr/share/grub/themes"
#   when: ansible_os_family == 'Archlinux'

- name: Check for EFI support
  register: efi_check
  ignore_errors: true
  tags:
  - check
  ansible.builtin.shell: efibootmgr -v

- name: Set efi_supported variable
  tags:
  - check
  ansible.builtin.set_fact:
    efi_supported: "{{ not efi_check.failed }}"

- setup:
- tags:
  - debug
  ansible.builtin.debug:
    msg: "{{ efi_supported }}"

- name: Set kernel cmdline params in grub
  block:
    - name: Copy background to /usr/share/backgrounds
      ansible.builtin.copy:
        src: usr/share/backgrounds/str_01_04.png
        dest: /usr/share/backgrounds/str_01_04.png

    - name: Set kernel cmdline params in grub
      register: default_grub
      ansible.builtin.template:
        src: etc/default/grub.j2
        dest: /etc/default/grub
        owner: root
        group: root
        mode: "644"
        backup: true

    - name: Remake grub if changes were made
      ansible.builtin.command: "{{ grub_mkconfig_command }}"
      when: default_grub.changed
      vars:
        grub_mkconfig_command: >-
          {% set grub_command_map = {
            'Debian': 'update-grub',
            'RedHat': 'grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg\ngrub2-mkconfig -o /boot/grub2/grub.cfg',
            'Archlinux': 'grub-mkconfig -o /boot/grub/grub.cfg'
          } %}

          {{ grub_command_map.get(ansible_os_family, '# Unsupported distribution') }}
  when: ansible_distribution != "Pop!_OS"
